import asyncio
import logging
import threading
import time
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest
from .states import SteamGuardStates
from ..steam.steam_manager import clients, client_threads, pending_logins, run_steam_client, stop_steam_client
from .ui_manager import create_account_keyboard, create_cancel_keyboard

logger = logging.getLogger(__name__)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
async def safe_edit_message(callback_query: CallbackQuery, text: str, reply_markup=None, parse_mode=None):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–∫–∏ 'message is not modified'"""
    try:
        await callback_query.message.edit_text(text, reply_markup=reply_markup, parse_mode=parse_mode)
    except TelegramBadRequest as e:
        if "message is not modified" in str(e):
            # –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            logger.debug("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")
            pass
        else:
            # –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ - –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–ª—å—à–µ
            raise e

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
async def handle_account_start(account_name, accounts, callback_query: CallbackQuery, state: FSMContext):
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç"""
    user_id = callback_query.from_user.id
    
    if account_name not in accounts:
        await safe_edit_message(callback_query, "‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return
    
    if account_name in clients and clients[account_name].logged_on:
        text = "‚ö†Ô∏è *–ê–∫–∫–∞—É–Ω—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω*\n\n"
        account_data = accounts[account_name]
        text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n"
        text += f"üìÅ –°—Ç–∞—Ç—É—Å: üü¢ –ê–∫—Ç–∏–≤–µ–Ω\n\n"
        text += "–ê–∫–∫–∞—É–Ω—Ç —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        keyboard = create_account_keyboard(account_name)
        await safe_edit_message(callback_query, text, keyboard, 'Markdown')
        return
    
    account_data = accounts[account_name]
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
    text = f"üöÄ *–ó–∞–ø—É—Å–∫ –∞–∫–∫–∞—É–Ω—Ç–∞*\n\n"
    text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n"
    text += f"üéÆ –ò–≥—Ä—ã: {', '.join(map(str, account_data['games']))}\n\n"
    text += "‚è≥ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Steam..."
    
    keyboard = create_account_keyboard(account_name)
    await safe_edit_message(callback_query, text, keyboard, 'Markdown')
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    thread = threading.Thread(target=run_steam_client, args=(account_name, account_data, user_id))
    thread.daemon = True
    thread.start()
    client_threads[account_name] = thread
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    await asyncio.sleep(5)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if account_name in clients and clients[account_name].logged_on:
        text = f"üöÄ *–ê–∫–∫–∞—É–Ω—Ç –∑–∞–ø—É—â–µ–Ω*\n\n"
        text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n"
        text += f"üéÆ –ò–≥—Ä—ã: {', '.join(map(str, account_data['games']))}\n\n"
        text += "‚úÖ –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!\n‚è∞ –ù–∞–∫—Ä—É—Ç–∫–∞ —á–∞—Å–æ–≤ –∞–∫—Ç–∏–≤–Ω–∞"
        keyboard = create_account_keyboard(account_name)
        await safe_edit_message(callback_query, text, keyboard, 'Markdown')
    elif user_id in pending_logins:
        # –¢—Ä–µ–±—É–µ—Ç—Å—è Steam Guard
        login_data = pending_logins[user_id]
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        pending_logins[user_id]['original_message'] = callback_query
        cancel_keyboard = create_cancel_keyboard()
        
        if login_data['guard_type'] == 'mobile':
            text = f"üîê *–¢—Ä–µ–±—É–µ—Ç—Å—è Steam Guard*\n\n"
            text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n\n"
            text += "üì± –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Steam Guard:\n\n"
            text += "üí° –ö–æ–¥ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 5 —Å–∏–º–≤–æ–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ABC12)"
            await state.set_state(SteamGuardStates.waiting_for_guard_code)
        else:  # email
            text = f"üìß *–¢—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–¥ —Å Email*\n\n"
            text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n\n"
            text += "üìß –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –≤–∞—à email:\n\n"
            text += "üí° –ö–æ–¥ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 5 —Å–∏–º–≤–æ–ª–æ–≤"
            await state.set_state(SteamGuardStates.waiting_for_email_code)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
        await safe_edit_message(callback_query, text, cancel_keyboard, 'Markdown')
    else:
        text = f"‚ùå *–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞*\n\n"
        text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n"
        text += f"üéÆ –ò–≥—Ä—ã: {', '.join(map(str, account_data['games']))}\n\n"
        text += "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Steam\n"
        text += "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n"
        text += "‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è\n"
        text += "‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É\n"
        text += "‚Ä¢ –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–æ–≤ Steam"
        keyboard = create_account_keyboard(account_name)
        await safe_edit_message(callback_query, text, keyboard, 'Markdown')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
async def handle_account_stop(account_name, accounts, callback_query: CallbackQuery):
    """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç"""
    if account_name not in clients:
        account_data = accounts[account_name] if account_name in accounts else None
        
        text = f"‚ö†Ô∏è *–ê–∫–∫–∞—É–Ω—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω*\n\n"
        if account_data:
            text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n"
            text += f"üìÅ –°—Ç–∞—Ç—É—Å: üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω\n\n"
        text += "–ê–∫–∫–∞—É–Ω—Ç —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        
        keyboard = create_account_keyboard(account_name)
        await safe_edit_message(callback_query, text, keyboard, 'Markdown')
        return
    
    if stop_steam_client(account_name):
        account_data = accounts[account_name]
        
        text = f"‚èπÔ∏è *–ê–∫–∫–∞—É–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω*\n\n"
        text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n"
        text += f"üìÅ –°—Ç–∞—Ç—É—Å: üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω\n\n"
        text += f"‚úÖ –ù–∞–∫—Ä—É—Ç–∫–∞ —á–∞—Å–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
        
        keyboard = create_account_keyboard(account_name)
        await safe_edit_message(callback_query, text, keyboard, 'Markdown')
    else:
        await safe_edit_message(callback_query, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞
async def handle_account_stats(account_name, accounts, callback_query: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞"""
    if account_name not in accounts:
        await safe_edit_message(callback_query, "‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    account_data = accounts[account_name]
    is_active = account_name in clients and clients[account_name].logged_on
    
    text = f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞*\n\n"
    text += f"üë§ –õ–æ–≥–∏–Ω: `{account_data['username']}`\n"
    text += f"üìÅ –°—Ç–∞—Ç—É—Å: {'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' if is_active else 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}\n"
    text += f"üéÆ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä: {len(account_data['games'])}\n"
    text += f"üéØ –ò–≥—Ä—ã: {', '.join(map(str, account_data['games']))}\n\n"
    
    if is_active:
        text += "‚è∞ –ù–∞–∫—Ä—É—Ç–∫–∞ —á–∞—Å–æ–≤ –∞–∫—Ç–∏–≤–Ω–∞"
    else:
        text += "üí§ –ù–∞–∫—Ä—É—Ç–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    
    text += f"\nüïê –û–±–Ω–æ–≤–ª–µ–Ω–æ: {time.strftime('%H:%M:%S')}"
    
    keyboard = create_account_keyboard(account_name)
    await safe_edit_message(callback_query, text, keyboard, 'Markdown')
