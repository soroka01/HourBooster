import asyncio
import logging
import threading
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

# –ò–º–ø–æ—Ä—Ç—ã –Ω–∞—à–∏—Ö –º–æ–¥—É–ª–µ–π
from src.config_manager import ConfigManager
from src.bot.states import SteamGuardStates
from src.steam.steam_manager import clients, client_threads, pending_logins, run_steam_client
from src.bot.ui_manager import create_main_keyboard, get_main_menu_text, create_account_keyboard, create_cancel_keyboard
from src.bot.handlers import safe_edit_message, handle_account_start, handle_account_stop, handle_account_stats
from src.bot.access_middleware import AccessMiddleware

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config_manager = ConfigManager()

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=config_manager.get_bot_token())
dp = Dispatcher()

# –ü–æ–¥–∫–ª—é—á–∞–µ–º middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞
dp.message.middleware(AccessMiddleware(config_manager))
dp.callback_query.middleware(AccessMiddleware(config_manager))

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
# –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@dp.message(Command("start"))
async def start_command(message: Message):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    accounts = config_manager.get_accounts_from_config()
    text = get_main_menu_text(accounts)
    
    if not accounts:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")]])
    else:
        keyboard = create_main_keyboard(accounts)
    
    await message.answer(text, reply_markup=keyboard, parse_mode='Markdown')

# –ö–æ–º–∞–Ω–¥–∞ /help –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
@dp.message(Command("help"))
async def help_command(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å"""
    text = "üìñ *–ü–æ–º–æ—â—å*\n\n"
    text += "üéØ *–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:*\n"
    text += "1. –í—ã–±–µ—Ä–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞\n"
    text += "2. –ù–∞–∂–º–∏—Ç–µ '–ó–∞–ø—É—Å—Ç–∏—Ç—å' –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–∫—Ä—É—Ç–∫–∏ —á–∞—Å–æ–≤\n"
    text += "3. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–≤–µ–¥–∏—Ç–µ Steam Guard –∫–æ–¥\n"
    text += "4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\n\n"
    text += "‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∞:*\n"
    text += "–ê–∫–∫–∞—É–Ω—Ç—ã –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –≤ —Ñ–∞–π–ª–µ `config.ini`\n\n"
    text += "üìä *–§—É–Ω–∫—Ü–∏–∏:*\n"
    text += "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–º—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏\n"
    text += "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è Steam Guard –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n"
    text += "‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã\n"
    text += "‚Ä¢ –£–¥–æ–±–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏\n\n"
    text += "üîß *–ö–æ–º–∞–Ω–¥—ã:*\n"
    text += "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
    text += "/help - –ü–æ–º–æ—â—å\n"
    text += "/cancel - –û—Ç–º–µ–Ω–∏—Ç—å –≤–≤–æ–¥ –∫–æ–¥–∞"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]])
    
    await message.answer(text, reply_markup=keyboard, parse_mode='Markdown')

# –ö–æ–º–∞–Ω–¥–∞ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
@dp.message(Command("cancel"))
async def cancel_command(message: Message, state: FSMContext):
    """–û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é"""
    current_state = await state.get_state()
    user_id = message.from_user.id
    
    if current_state in [SteamGuardStates.waiting_for_guard_code, SteamGuardStates.waiting_for_email_code]:
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤—Ö–æ–¥–∞
        if user_id in pending_logins:
            del pending_logins[user_id]
        
        await state.clear()
        await message.answer("‚ùå –í–≤–æ–¥ –∫–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.")
    else:
        await message.answer("‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤ (–Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏)
@dp.callback_query()
async def handle_callback_query(callback_query: CallbackQuery, state: FSMContext):
    await callback_query.answer()
    
    data = callback_query.data
    accounts = config_manager.get_accounts_from_config()
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –≤–≤–æ–¥–∞ –∫–æ–¥–∞
    if data == "cancel_code":
        user_id = callback_query.from_user.id
        if user_id in pending_logins:
            del pending_logins[user_id]
        
        await state.clear()
        
        text = get_main_menu_text(accounts)
        if not accounts:
            keyboard = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")]])
        else:
            keyboard = create_main_keyboard(accounts)
        
        await safe_edit_message(callback_query, text, keyboard, 'Markdown')
        return
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –ª—é–±–æ–º callback (–∫—Ä–æ–º–µ —Å–∞–º–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤—Ö–æ–¥–∞)
    if not data.startswith("start_"):
        await state.clear()
    
    if data == "refresh" or data == "back":
        text = get_main_menu_text(accounts)
        
        if not accounts:
            keyboard = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")]])
        else:
            keyboard = create_main_keyboard(accounts)
        
        await safe_edit_message(callback_query, text, keyboard, 'Markdown')
        
    elif data == "help":
        text = "üìñ *–ü–æ–º–æ—â—å*\n\n"
        text += "üéØ *–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:*\n"
        text += "1. –í—ã–±–µ—Ä–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞\n"
        text += "2. –ù–∞–∂–º–∏—Ç–µ '–ó–∞–ø—É—Å—Ç–∏—Ç—å' –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–∫—Ä—É—Ç–∫–∏ —á–∞—Å–æ–≤\n"
        text += "3. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–≤–µ–¥–∏—Ç–µ Steam Guard –∫–æ–¥\n"
        text += "4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\n\n"
        text += "‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∞:*\n"
        text += "–ê–∫–∫–∞—É–Ω—Ç—ã –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –≤ —Ñ–∞–π–ª–µ `config.ini`\n\n"
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]])
        await safe_edit_message(callback_query, text, keyboard, 'Markdown')
        
    elif data.startswith("account_"):
        account_name = data.replace("account_", "")
        
        if account_name not in accounts:
            await safe_edit_message(callback_query, "‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        account_data = accounts[account_name]
        is_active = account_name in clients and clients[account_name].logged_on
        
        text = f"‚öôÔ∏è *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º*\n\n"
        text += f"üë§ –õ–æ–≥–∏–Ω: `{account_data['username']}`\n"
        text += f"üìÅ –°—Ç–∞—Ç—É—Å: {'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' if is_active else 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}\n"
        text += f"üéÆ –ò–≥—Ä—ã: {', '.join(map(str, account_data['games']))}\n\n"
        text += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        
        keyboard = create_account_keyboard(account_name)
        await safe_edit_message(callback_query, text, keyboard, 'Markdown')
        
    elif data.startswith("start_"):
        account_name = data.replace("start_", "")
        await handle_account_start(account_name, accounts, callback_query, state)
        
    elif data.startswith("stop_"):
        account_name = data.replace("stop_", "")
        await handle_account_stop(account_name, accounts, callback_query)
        
    elif data.startswith("stats_"):
        account_name = data.replace("stats_", "")
        await handle_account_stats(account_name, accounts, callback_query)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ Steam Guard –∫–æ–¥–∞
@dp.message(SteamGuardStates.waiting_for_guard_code)
async def process_guard_code(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ Steam Guard –∫–æ–¥–∞"""
    user_id = message.from_user.id
    guard_code = message.text.strip()
    
    if user_id not in pending_logins:
        await message.answer("‚ùå –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∑–∞–Ω–æ–≤–æ.")
        await state.clear()
        return
    
    login_data = pending_logins[user_id]
    account_name = login_data['account_name']
    account_data = login_data['account_data']
    original_message = login_data.get('original_message')
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if original_message:
        text = f"üîê *–¢—Ä–µ–±—É–µ—Ç—Å—è Steam Guard*\n\n"
        text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n\n"
        text += "‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º Steam Guard –∫–æ–¥..."
        cancel_keyboard = create_cancel_keyboard()
        await safe_edit_message(original_message, text, cancel_keyboard, 'Markdown')
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ö–æ–¥ —Å –∫–æ–¥–æ–º
    thread = threading.Thread(
        target=run_steam_client, 
        args=(account_name, account_data, user_id, guard_code, None)
    )
    thread.daemon = True
    thread.start()
    client_threads[account_name] = thread
    
    await asyncio.sleep(3)
    
    if account_name in clients and clients[account_name].logged_on:
        # –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ - –æ–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if original_message:
            text = f"‚úÖ *–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!*\n\n"
            text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n"
            text += f"üéÆ –ò–≥—Ä—ã: {', '.join(map(str, account_data['games']))}\n\n"
            text += "üöÄ –ê–∫–∫–∞—É–Ω—Ç –∑–∞–ø—É—â–µ–Ω!\n‚è∞ –ù–∞–∫—Ä—É—Ç–∫–∞ —á–∞—Å–æ–≤ –∞–∫—Ç–∏–≤–Ω–∞"
            
            keyboard = create_account_keyboard(account_name)
            await safe_edit_message(original_message, text, keyboard, 'Markdown')
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–¥–æ–º
        try:
            await message.delete()
        except Exception:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
        
        await state.clear()
    else:
        # –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ - –æ–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if original_message:
            text = f"üîê *–¢—Ä–µ–±—É–µ—Ç—Å—è Steam Guard*\n\n"
            text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n\n"
            text += "üì± –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Steam Guard:\n\n"
            text += "üí° –ö–æ–¥ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 5 —Å–∏–º–≤–æ–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ABC12)\n"
            text += "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
            cancel_keyboard = create_cancel_keyboard()
            await safe_edit_message(original_message, text, cancel_keyboard, 'Markdown')
        
        # –£–¥–∞–ª—è–µ–º –Ω–µ–≤–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            await message.delete()
        except Exception:
            pass

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ Email –∫–æ–¥–∞
@dp.message(SteamGuardStates.waiting_for_email_code)
async def process_email_code(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ Email –∫–æ–¥–∞"""
    user_id = message.from_user.id
    email_code = message.text.strip()
    
    if user_id not in pending_logins:
        await message.answer("‚ùå –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∑–∞–Ω–æ–≤–æ.")
        await state.clear()
        return
    
    login_data = pending_logins[user_id]
    account_name = login_data['account_name']
    account_data = login_data['account_data']
    original_message = login_data.get('original_message')
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if original_message:
        text = f"üìß *–¢—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–¥ —Å Email*\n\n"
        text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n\n"
        text += "‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º Email –∫–æ–¥..."
        cancel_keyboard = create_cancel_keyboard()
        await safe_edit_message(original_message, text, cancel_keyboard, 'Markdown')
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ö–æ–¥ —Å –∫–æ–¥–æ–º
    thread = threading.Thread(
        target=run_steam_client, 
        args=(account_name, account_data, user_id, None, email_code)
    )
    thread.daemon = True
    thread.start()
    client_threads[account_name] = thread
    
    await asyncio.sleep(3)
    
    if account_name in clients and clients[account_name].logged_on:
        # –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ - –æ–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if original_message:
            text = f"‚úÖ *–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!*\n\n"
            text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n"
            text += f"üéÆ –ò–≥—Ä—ã: {', '.join(map(str, account_data['games']))}\n\n"
            text += "üöÄ –ê–∫–∫–∞—É–Ω—Ç –∑–∞–ø—É—â–µ–Ω!\n‚è∞ –ù–∞–∫—Ä—É—Ç–∫–∞ —á–∞—Å–æ–≤ –∞–∫—Ç–∏–≤–Ω–∞"
            
            keyboard = create_account_keyboard(account_name)
            await safe_edit_message(original_message, text, keyboard, 'Markdown')
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ–¥–æ–º
        try:
            await message.delete()
        except Exception:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
        
        await state.clear()
    else:
        # –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ - –æ–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if original_message:
            text = f"üìß *–¢—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–¥ —Å Email*\n\n"
            text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n\n"
            text += "üìß –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –≤–∞—à email:\n\n"
            text += "üí° –ö–æ–¥ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 5 —Å–∏–º–≤–æ–ª–æ–≤\n"
            text += "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑"
            cancel_keyboard = create_cancel_keyboard()
            await safe_edit_message(original_message, text, cancel_keyboard, 'Markdown')
        
        # –£–¥–∞–ª—è–µ–º –Ω–µ–≤–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            await message.delete()
        except Exception:
            pass

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
@dp.message()
async def unknown_command(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ –∫–æ–¥–∞
    current_state = await state.get_state()
    if current_state in [SteamGuardStates.waiting_for_guard_code, SteamGuardStates.waiting_for_email_code]:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –≤–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∫–æ–¥–∞
        user_id = message.from_user.id
        
        # –£–¥–∞–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await message.delete()
        except Exception:
            pass
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π
        if user_id in pending_logins:
            login_data = pending_logins[user_id]
            original_message = login_data.get('original_message')
            account_data = login_data['account_data']
            
            if original_message:
                if current_state == SteamGuardStates.waiting_for_guard_code:
                    text = f"üîê *–¢—Ä–µ–±—É–µ—Ç—Å—è Steam Guard*\n\n"
                    text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n\n"
                    text += "üì± –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Steam Guard:\n\n"
                    text += "üòä –ö–æ–¥ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 5 —Å–∏–º–≤–æ–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ABC12)\n"
                    text += "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –∫–æ–¥ Steam Guard"
                else:
                    text = f"üìß *–¢—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–¥ —Å Email*\n\n"
                    text += f"üë§ –ê–∫–∫–∞—É–Ω—Ç: `{account_data['username']}`\n\n"
                    text += "üìß –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –≤–∞—à email:\n\n"
                    text += "üí° –ö–æ–¥ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 5 —Å–∏–º–≤–æ–ª–æ–≤\n"
                    text += "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –∫–æ–¥ —Å Email"
                
                cancel_keyboard = create_cancel_keyboard()
                await safe_edit_message(original_message, text, cancel_keyboard, 'Markdown')
        return
    
    text = "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã."
    await message.answer(text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞
async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    asyncio.run(main())
